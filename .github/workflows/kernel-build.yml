name: Pi kernel build tests

on:
  pull_request:
    paths-ignore:
      - '.github/**'
    branches: [ "rpi-*" ]
  push:
    paths-ignore:
      - '.github/**'
    branches: [ "rpi-*" ]
  workflow_dispatch:

env:
  NUM_JOBS: 3

permissions:
  write-all

jobs:
  create_release:
    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Get Commit SHA
      id: get-commit-sha
      run: echo "::set-output name=commit_sha::$(echo ${{ github.sha }} | cut -c -7)"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get-commit-sha.outputs.commit_sha }}
        release_name: Release ${{ steps.get-commit-sha.outputs.commit_sha }}
        draft: false
        prerelease: false

  build:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        include:
          - name: bcm2711
            defconfig: bcm2711_defconfig
            kernel: kernel8

          - name: bcm2712
            defconfig: bcm2712_defconfig
            kernel: kernel_2712

    steps:
    - name: Update install
      run:
        sudo apt-get update

    - name: Install toolchain
      run:
        sudo apt-get install gcc-aarch64-linux-gnu;
      timeout-minutes: 5

    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
        clean: true

    - name: Build kernel ${{matrix.name}}
      run: |
        mkdir ${{github.workspace}}/build
        export ARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        make O=${{github.workspace}}/build ${{matrix.defconfig}}
        scripts/config --file ${{github.workspace}}/build/.config --set-val CONFIG_WERROR y
        make O=${{github.workspace}}/build -j ${{env.NUM_JOBS}} Image modules dtbs
        mkdir -p ${{github.workspace}}/install/boot/firmware/overlays
        make O=${{github.workspace}}/build INSTALL_MOD_PATH=${{github.workspace}}/install modules_install
        cp ${{github.workspace}}/build/arch/${ARCH}/boot/dts/broadcom/*.dtb ${{github.workspace}}/install/boot/firmware/
        cp ${{github.workspace}}/build/arch/${ARCH}/boot/dts/overlays/*.dtb* ${{github.workspace}}/install/boot/firmware/overlays/
        cp ${{github.workspace}}/arch/${ARCH}/boot/dts/overlays/README ${{github.workspace}}/install/boot/firmware/overlays/
        cp ${{github.workspace}}/build/arch/${ARCH}/boot/Image ${{github.workspace}}/install/boot/firmware/${{matrix.kernel}}.img

    - name: Tar build
      run: tar -cvf ${{matrix.name}}_build.tar -C ${{github.workspace}}/install .

    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.name}}_build
        path: ${{matrix.name}}_build.tar
        retention-days: 90

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ${{matrix.name}}_build.tar
        asset_name: ${{matrix.name}}_build
        asset_content_type: application/x-tar
